{"remainingRequest":"/srv/http/yii/web/node_modules/babel-loader/lib/index.js!/srv/http/yii/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/srv/http/yii/web/src/components/Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/srv/http/yii/web/src/components/Menu.vue","mtime":1533661913817},{"path":"/srv/http/yii/web/node_modules/cache-loader/dist/cjs.js","mtime":1532538097706},{"path":"/srv/http/yii/web/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/srv/http/yii/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      menu_spread: false,\n      menu_links: [{\n        name: \"最新\",\n        type: \"Lastest\"\n      }, {\n        name: \"Javascript\",\n        type: \"Javascript\"\n      }, {\n        name: \"PHP\",\n        type: \"PHP\"\n      }, {\n        name: \"Linux\",\n        type: \"Linux\"\n      }],\n      selected_type: this.$route.params.type || this.G.defaultMenuType\n    };\n  },\n  computed: {\n    selected: function selected() {\n      var _this = this;\n\n      var _selected_type = this.menu_links.find(function (link) {\n        return link.type === _this.selected_type;\n      });\n\n      if (!_selected_type) {\n        console.log(this.$router);\n        this.$router.replace({\n          name: \"notfound\"\n        });\n        return false;\n      }\n\n      return _selected_type;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.menu_spread = false;\n    },\n    selected_type: {\n      handler: function handler(type) {\n        console.log(type);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    spread: function spread(type) {\n      var media_query = \"(max-width: \".concat(this.G.breakpoints.sm - 1, \"px)\");\n\n      if (window.matchMedia(media_query).matches) {\n        this.menu_spread = !this.menu_spread;\n        if (typeof type === \"string\") this.selected_type = type;\n      }\n    }\n  }\n};",{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;AAQA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,mBAAA,KADA;AAEA,kBAAA,CACA;AAAA,cAAA,IAAA;AAAA,cAAA;AAAA,OADA,EAEA;AAAA,cAAA,YAAA;AAAA,cAAA;AAAA,OAFA,EAGA;AAAA,cAAA,KAAA;AAAA,cAAA;AAAA,OAHA,EAIA;AAAA,cAAA,OAAA;AAAA,cAAA;AAAA,OAJA,CAFA;AAQA,qBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,IAAA,KAAA,CAAA,CAAA;AARA,KAAA;AAUA,GAZA;AAaA,YAAA;AACA,YADA,sBACA;AAAA;;AACA,UAAA,iBAAA,KAAA,UAAA,CAAA,IAAA,CACA;AAAA,eAAA,KAAA,IAAA,KAAA,MAAA,aAAA;AAAA,OADA,CAAA;;AAGA,UAAA,CAAA,cAAA,EAAA;AACA,gBAAA,GAAA,CAAA,KAAA,OAAA;AACA,aAAA,OAAA,CAAA,OAAA,CAAA;AAAA,gBAAA;AAAA,SAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA,cAAA;AACA;AAXA,GAbA;AA0BA,SAAA;AACA,UADA,oBACA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KAHA;AAIA,mBAAA;AACA,aADA,mBACA,IADA,EACA;AACA,gBAAA,GAAA,CAAA,IAAA;AACA,OAHA;AAIA,iBAAA;AAJA;AAJA,GA1BA;AAqCA,WAAA;AACA,UADA,kBACA,IADA,EACA;AACA,UAAA,oCAAA,KAAA,CAAA,CAAA,WAAA,CAAA,EAAA,GAAA,CAAA,QAAA;;AACA,UAAA,OAAA,UAAA,CAAA,WAAA,EAAA,OAAA,EAAA;AACA,aAAA,WAAA,GAAA,CAAA,KAAA,WAAA;AACA,YAAA,OAAA,IAAA,KAAA,QAAA,EAAA,KAAA,aAAA,GAAA,IAAA;AACA;AACA;AAPA;AArCA,CAAA","sourcesContent":["<template>\n  <menu id=\"menu\" :class=\"{'is-spread': menu_spread}\">\n    <span class=\"link\" @click=\"spread\">{{selected.name}}</span>\n    <router-link class=\"link\" :to=\"{name:'home', params:{page:'home', type:link.type}}\" :key=\"index\" v-for=\"(link, index) in menu_links\" @click.native=\"spread(link.type)\">{{link.name}}</router-link>\n  </menu>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      menu_spread: false,\n      menu_links: [\n        { name: \"最新\", type: \"Lastest\" },\n        { name: \"Javascript\", type: \"Javascript\" },\n        { name: \"PHP\", type: \"PHP\" },\n        { name: \"Linux\", type: \"Linux\" }\n      ],\n      selected_type: this.$route.params.type || this.G.defaultMenuType\n    };\n  },\n  computed: {\n    selected() {\n      const _selected_type = this.menu_links.find(\n        link => link.type === this.selected_type\n      );\n      if (!_selected_type) {\n        console.log(this.$router);\n        this.$router.replace({ name: \"notfound\" });\n        return false;\n      }\n      return _selected_type;\n    }\n  },\n  watch: {\n    $route() {\n      this.menu_spread = false;\n    },\n    selected_type: {\n      handler(type) {\n        console.log(type);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    spread(type) {\n      const media_query = `(max-width: ${this.G.breakpoints.sm - 1}px)`;\n      if (window.matchMedia(media_query).matches) {\n        this.menu_spread = !this.menu_spread;\n        if (typeof type === \"string\") this.selected_type = type;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/assets/style/menu.scss\";\n</style>\n"],"sourceRoot":"src/components"}]}