{"remainingRequest":"/srv/http/yii/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/srv/http/yii/web/src/components/Menu.vue?vue&type=style&index=0&id=9bcc0be2&lang=scss&scoped=true&","dependencies":[{"path":"/srv/http/yii/web/src/components/Menu.vue","mtime":1533661913817},{"path":"/srv/http/yii/web/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/srv/http/yii/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/srv/http/yii/web/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/srv/http/yii/web/node_modules/sass-loader/lib/loader.js","mtime":499162500000},{"path":"/srv/http/yii/web/node_modules/cache-loader/dist/cjs.js","mtime":1532538097706},{"path":"/srv/http/yii/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/style/menu.scss\";\n",{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA","file":"Menu.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <menu id=\"menu\" :class=\"{'is-spread': menu_spread}\">\n    <span class=\"link\" @click=\"spread\">{{selected.name}}</span>\n    <router-link class=\"link\" :to=\"{name:'home', params:{page:'home', type:link.type}}\" :key=\"index\" v-for=\"(link, index) in menu_links\" @click.native=\"spread(link.type)\">{{link.name}}</router-link>\n  </menu>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      menu_spread: false,\n      menu_links: [\n        { name: \"最新\", type: \"Lastest\" },\n        { name: \"Javascript\", type: \"Javascript\" },\n        { name: \"PHP\", type: \"PHP\" },\n        { name: \"Linux\", type: \"Linux\" }\n      ],\n      selected_type: this.$route.params.type || this.G.defaultMenuType\n    };\n  },\n  computed: {\n    selected() {\n      const _selected_type = this.menu_links.find(\n        link => link.type === this.selected_type\n      );\n      if (!_selected_type) {\n        console.log(this.$router);\n        this.$router.replace({ name: \"notfound\" });\n        return false;\n      }\n      return _selected_type;\n    }\n  },\n  watch: {\n    $route() {\n      this.menu_spread = false;\n    },\n    selected_type: {\n      handler(type) {\n        console.log(type);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    spread(type) {\n      const media_query = `(max-width: ${this.G.breakpoints.sm - 1}px)`;\n      if (window.matchMedia(media_query).matches) {\n        this.menu_spread = !this.menu_spread;\n        if (typeof type === \"string\") this.selected_type = type;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/assets/style/menu.scss\";\n</style>\n"]}]}